name: Compile Sketch

# The workflow will run on every push and pull request to the repository
on:
  - push
  - pull_request

env:
  SKETCHES_REPORTS_PATH: sketches-reports
  SKETCHES_REPORTS_ARTIFACT_NAME: sketches-reports

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      # This step makes the contents of the repository available to the workflow
      - name: Checkout repository
        uses: actions/checkout@v4

      # For more information: https://github.com/arduino/compile-sketches#readme
      - name: Compile sketch
        uses: arduino/compile-sketches@v1.1.0
        with:
          github-token: ${{ secrets.TOKEN }}
          # The default is to compile for the Arduino Uno board. If you want to compile for other boards, use the `fqbn` input.
          sketch-paths: |
            # Configure the action to search all folders under the root of the repository for sketches and compile them.
            # This is formatted as a YAML list, which makes it possible to have multiple sketch paths if needed.
            - ./
          libraries: |
            # Install library dependencies.
            - name: IRremote
            - name: WiFiEsp
            - name: Servo
          enable-deltas-report: true
          sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}
          
      - name: Upload sketches report to workflow artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.SKETCHES_REPORTS_PATH }}
          path: ${{ env.SKETCHES_REPORTS_PATH }}
          
  report:
    needs: compile
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Download sketches reports artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
          path: ${{ env.SKETCHES_REPORTS_PATH }}
      
      - uses: arduino/report-size-deltas@v1
        with:
          sketches-reports-source: ${{ env.SKETCHES_REPORTS_PATH }}
    
